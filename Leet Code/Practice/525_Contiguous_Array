// https://leetcode.com/problems/contiguous-array/


// Using Arrays


public class Solution {

    public int findMaxLength(int[] nums) {
        int[] arr = new int[2 * nums.length + 1];
        Arrays.fill(arr, -2);
        arr[nums.length] = -1;
        int maxlen = 0, count = 0;
        for (int i = 0; i < nums.length; i++) {
            count = count + (nums[i] == 0 ? -1 : 1);
            if (arr[count + nums.length] >= -1) {
                maxlen = Math.max(maxlen, i - arr[count + nums.length]);
            } else {
                arr[count + nums.length] = i;
            }

        }
        return maxlen;
    }
}


// Using HashTables

class Solution {
    public int findMaxLength(int[] nums) {
        HashMap<Integer, Integer> counts = new HashMap<>();
        
        int max_length = 0;
        int count = 0;
        counts.put(0,-1);
        for (int i=0; i<nums.length; i++) {
            if (nums[i] == 0)
                count--;
            else
                count++;
            if (counts.containsKey(count)) {
                max_length = Math.max(max_length, i - counts.get(count));
            }
            else {
                counts.put(count, i);
            }
        }
        return max_length;
    }
}
