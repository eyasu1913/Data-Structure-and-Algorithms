// https://leetcode.com/problems/binary-tree-postorder-traversal/

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def postorderTraversal(self, root: TreeNode) -> List[int]:
        if (root == None):
            return root
        stack = []
        ans = []
        stack.append(root)
        while len(stack) > 0:
            node = stack.pop()
            ans.append(node.val)
            if (node.left != None):
                stack.append(node.left)
            if (node.right != None):
                stack.append(node.right)
            
        ans = ans[::-1]
        return ans
