// https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int maxLevelSum(TreeNode root) {
        Queue<TreeNode> queue = new LinkedList();
        queue.add(root);
        int level = 1;
        int max = Integer.MIN_VALUE, maxlev = 1;
        while (!queue.isEmpty()) {
            int size = queue.size();
            int sum = 0 ;
            while (size > 0) {
                TreeNode node = queue.poll();
                sum += node.val;
                if (node.left != null)
                    queue.add(node.left);
                if (node.right != null)
                    queue.add(node.right);
                size --;
            }
            //System.out.println(sum);
            if (max < sum) {
                max = sum;
                maxlev = level;
            }
            level++;
        }
        return maxlev;
    }
}
