// https://leetcode.com/problems/validate-binary-search-tree/

// My approach

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    
    def isValidBST(self, root: TreeNode) -> bool:
        if(root==None):
            return True
        if(root.left==None and root.right==None):
            return True
        self.ans = []
        self.inorder(root)
        f = 0
        print(self.ans)
        for i in range(len(self.ans)-1):
            x = self.ans
            if(x[i]<x[i+1]):
                f = 1
            else:
                f = 0
                return False
        if(f==1):
            return True
        else:
            return False
        
        
    def inorder(self,root:TreeNode):
        if(root):
            self.inorder(root.left)
            self.ans.append(root.val)
            self.inorder(root.right)
        
        
// Other solutions

// https://leetcode.com/problems/validate-binary-search-tree/solution/
