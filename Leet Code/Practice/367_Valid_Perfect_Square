// https://leetcode.com/problems/valid-perfect-square/

// class Solution {
//     public boolean isPerfectSquare(int num) {
//         int odd = 1;
//         int even = 0;
//         int tmp = num;
//         while(num>1) {
//             num = num>>2;
//         }
//         if(num==1)
//             return true;
//         else
//             return false;
//     }
// }
class Solution {
    public boolean isPerfectSquare(int num) {
        long left = 1, right = num;
        while (left <= right) {
            long mid = (left + right) / 2;
            if (mid * mid == num) return true; // check if mid is perfect square
            if (mid * mid < num) { // mid is small -> go right to increase mid
                left = mid + 1;
            } else {
                right = mid - 1; // mid is large -> to left to decrease mid
            }
        }
        return false;
    }
}
