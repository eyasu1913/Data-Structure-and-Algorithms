// https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string-ii/

// class Solution {
//     public String removeDuplicates(String s, int k) {
//         int i = 0;
//         int n = s.length();
//         int count[] = new int[n];
//         char[] stack = s.toCharArray();
//         for (int j = 0; j < n; ++j, ++i) {
//             stack[i] = stack[j];
//             count[i] = i > 0 && stack[i - 1] == stack[j] ? count[i - 1] + 1 : 1;
//             if (count[i] == k) i -= k;
//         }
//         return new String(stack, 0, i);
//     }
// }

class Solution {
    public String removeDuplicates(String s, int k) {
        int[] count = new int[s.length()];
        StringBuilder sb = new StringBuilder();
        for (char c : s.toCharArray()) {
            sb.append(c);
            int last = sb.length() - 1;
            count[last] = 1 + (last > 0 && sb.charAt(last) == sb.charAt(last - 1) ? count[last - 1] : 0);
            if (count[last] >= k) sb.delete(sb.length() - k, sb.length());
        }
        return sb.toString();
    }
}
