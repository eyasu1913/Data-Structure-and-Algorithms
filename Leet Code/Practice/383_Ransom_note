// https://leetcode.com/problems/ransom-note/

// My approach

class Solution:
    def canConstruct(self, ransomNote: str, magazine: str) -> bool:
        a = {}
        b = {}
        for i in ransomNote:
            if i not in a:
                a[i] = 0
            else:
                a[i] += 1
        for i in magazine:
            if i not in b:
                b[i] = 0
            else:
                b[i] += 1
        for key,value in a.items():
            if key in b:
                if(b[key]<value):
                    return False
            else:
                return False
        return True
        
// SOlution

class Solution(object):
    def canConstruct(self, ransomNote, magazine):
        """
        :type ransomNote: str
        :type magazine: str
        :rtype: bool
        """
        for i in set(ransomNote):
            if ransomNote.count(i) > magazine.count(i):
                return False
        return True
        
// Java

public class Solution {
    public boolean canConstruct(String ransomNote, String magazine) {
        int[] arr = new int[26];
        for (int i = 0; i < magazine.length(); i++) {
            arr[magazine.charAt(i) - 'a']++;
        }
        for (int i = 0; i < ransomNote.length(); i++) {
            if(--arr[ransomNote.charAt(i)-'a'] < 0) {
                return false;
            }
        }
        return true;
    }
}
