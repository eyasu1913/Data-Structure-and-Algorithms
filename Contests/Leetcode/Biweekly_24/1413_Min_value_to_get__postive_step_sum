// https://leetcode.com/contest/biweekly-contest-24/problems/minimum-value-to-get-positive-step-by-step-sum/

// My approach

class Solution {
    public int minStartValue(int[] nums) {
        int max = 1;
        int sum = 1;
        for(int i=0;i<nums.length;i++)
        {
            sum -= nums[i];
            if(max<sum)
                max = sum;
        }
        return max;
    }
}
        // for(int i=0;i<nums.length;i++)
        // {
        //     if(max<nums[i])
        //         max = nums[i];
        // }
        // int a[] = nums;
        // int startValue = max;
        // int min = 9999;
        // nums[0] = startValue + nums[0];
        // for(int i=1;i<nums.length;i++)
        // {
        //     nums[i] = nums[i] + nums[i-1];
        //     if(min>nums[i]) 
        //         min = nums[i];
        // }
        // return startValue+(1-min);
        
//     }
// }


// Best

class Solution(object):
    def minStartValue(self, nums):
        P = [0]
        for x in nums: 
          P.append(P[-1] + x)
          m = min(P)
          ans = 1
          ans = max(ans, 1 - m)
        return ans
