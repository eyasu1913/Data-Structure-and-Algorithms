// https://leetcode.com/problems/diagonal-traverse-ii/

class Solution:
    # def findDiagonalOrder(self, A):
    #     res = []
    #     for i, r in enumerate(A):
    #         for j, a in enumerate(r):
    #             if len(res) <= i + j:
    #                 res.append([])
    #             res[i + j].append(a)
    #     return [a for r in res for a in reversed(r)]
    def findDiagonalOrder(self, nums: List[List[int]]) -> List[int]:
        diction = {}
        ans = []
        for i,a in enumerate(nums):
            for j,b in enumerate(a):
                if((i+j) in diction):
                    diction[i+j].append(b)
                else:
                    diction[i+j] = [b]
        for key,value in diction.items():
            for i in value[::-1]:
                ans.append(i)
        return ans
