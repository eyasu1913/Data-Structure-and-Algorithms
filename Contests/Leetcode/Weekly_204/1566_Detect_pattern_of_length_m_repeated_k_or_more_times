// https://leetcode.com/problems/detect-pattern-of-length-m-repeated-k-or-more-times/

// DID NOT WORK

class Solution {
    public boolean containsPattern(int[] arr, int m, int k) {
        int count = 0;
        int start = 0;
        int end = m;
        
        int i = 1, f = 0;
        while (i < arr.length) {
            for (int j = i; j < i + m - 1; j ++)
                arr[j] = arr[j] + arr[j - 1];
            i = i + m;
        }
        HashMap<Integer, Integer> map = new HashMap<>();
        for (int x : arr) {
            //System.out.println(x);
            map.put(x, map.getOrDefault(x, 0) + 1);
        }
        int prev = 0;
        count = 0;
        for (i = 0; i < arr.length-m; i=i+m) {
            if (i == 0) {
                count = 0;
                prev = map.get(arr[0]);
            }
                
            if (map.get(arr[i]) == prev) {
                count ++;
                prev = map.get(arr[i]);
            }
                
        }
        System.out.println(count);
        return (count) >= k;
    }
}

