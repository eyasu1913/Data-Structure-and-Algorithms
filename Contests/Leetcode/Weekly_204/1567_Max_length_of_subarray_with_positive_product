// https://leetcode.com/problems/maximum-length-of-subarray-with-positive-product/

// DID NOT WORK

class Solution {
    public int getMaxLen(int[] nums) {
        int max = 0, count = 0;
        int MOD = 1000000007;
        if (nums.length == 1 && nums[0] < 0)
            return 0;
        if (nums.length == 1 && nums[0] >= 0)
            return 1;
        if (nums[1] == nums[0] && nums[0] > 0)
            count = 1;
        for (int i = 1; i < nums.length; i ++) {
            if (nums[i] * nums[i - 1] >= nums[i] && nums[i] !=0) {
                nums[i] = (nums[i] * nums[i - 1]);
                // if (nums[i] > 0)
                count ++;
            }
            else {
                
                count = 0;
            }
                
            if (max < count)
                max = count;
                
        }
        if (max == 0 && nums[0] == 0)
            return max;
        return max + 1;
    }
}
