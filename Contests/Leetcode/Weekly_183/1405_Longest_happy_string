// https://leetcode.com/problems/longest-happy-string/

// My try

class Solution:
    def longestDiverseString(self, a: int, b: int, c: int) -> str:
        exclude = ['aaa','bbb','ccc']
        letters = ['a','b','c']
        count = [a,b,c]
        counts = []
        i = 0
        letter = []
        q = 0
        while(q!=3):
            ind = count.index(max(count))
            counts.append(count[ind])
            count[ind] = -1
            letter.append(letters[ind])
            q+=1
        # print(letter)
        maxPossible = a+b+c
        ca = 0
        cb = 0
        cc = 0
        k = 0
        length = 0
        s=""
        print(counts)
        countind = 0
        first = countind
        while(sum(counts)!=0):
        
            # if(ca<=a and last!='a'):
            #     s+=letters[0]
            #     ca+=1
            #     last = 'a'
            #     lastbefore = 'c'
            # if(cb<=b and last!='b'):
            #     s+=letters[1]
            #     cb+=1
            #     last = 'b'
            #     lastbefore = 'a'
            # if(cc<=c and last!='c'):
            #     s+=letters[2]
            #     cc+=1
            #     last = 'c'
            #     lastbefore ='b'
            if(counts[first]==0 or length==2):
                first = (first+1)%3
                length=0
            if(counts[first]>0):
                s +=letter[first]
            counts[first]-=1
            print(counts)
            
            length+=1
            
        return s
        
