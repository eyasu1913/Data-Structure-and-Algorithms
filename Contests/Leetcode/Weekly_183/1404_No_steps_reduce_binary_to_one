// https://leetcode.com/problems/number-of-steps-to-reduce-a-number-in-binary-representation-to-one/

// My approach

class Solution:
    def numSteps(self, s: str) -> int:
        binary = list(map(int,s))
        binary.reverse()
        sum = 0
        k = 0
        for i in binary:
            sum+=i*(2**k)
            k+=1
        count = 0
        while(sum!=1):
            if(sum%2 == 0):
                sum = sum//2
            else:
                sum = sum + 1
            count+=1
        return count
                
                
