/*
1) Fix base case
2) Recurse through Left subtree
3) Recurse through Right subtree
*/

// Finding the path sum of a tree

public boolean hasPathSum(TreeNode root, int sum) {
        return calcSum(root, sum);
    }
    public boolean calcSum(TreeNode root, int sum) {
        if (root == null)                                                               // Check for nullity
            return false;
        if (root.left == null && root.right == null && (sum - root.val) == 0)           // Termination base case
            return true;
        return calcSum(root.left, sum - root.val) || calcSum(root.right, sum - root.val); // Recursing through Left subtree and Right subtree
    }
